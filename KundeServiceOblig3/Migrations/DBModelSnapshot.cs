// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace KundeServiceOblig3.Migrations
{
    [DbContext(typeof(DB))]
    partial class DBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.DBModel.Kategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Navn");

                    b.HasKey("ID");

                    b.ToTable("Kategorier");
                });

            modelBuilder.Entity("DAL.DBModel.Kunde", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Epost");

                    b.Property<string>("Etternavn");

                    b.Property<string>("Fornavn");

                    b.Property<string>("Telefon");

                    b.HasKey("ID");

                    b.ToTable("Kunder");
                });

            modelBuilder.Entity("DAL.DBModel.Kundebehandler", b =>
                {
                    b.Property<string>("Brukernavn")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Passord");

                    b.Property<string>("Salt");

                    b.HasKey("Brukernavn");

                    b.ToTable("Kundebehandlere");
                });

            modelBuilder.Entity("DAL.DBModel.SporsmalC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Sporsmal");

                    b.Property<DateTime>("Stilt");

                    b.HasKey("ID");

                    b.ToTable("Sporsmal");
                });

            modelBuilder.Entity("DAL.DBModel.SporsmalOgSvar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KategoriID");

                    b.Property<int?>("KundeID");

                    b.Property<bool>("Publisert");

                    b.Property<int>("SporsmalID");

                    b.Property<int?>("SvarID");

                    b.HasKey("ID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("KundeID");

                    b.HasIndex("SporsmalID");

                    b.HasIndex("SvarID");

                    b.ToTable("SporsmalOgSvar");
                });

            modelBuilder.Entity("DAL.DBModel.SvarC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Besvart");

                    b.Property<string>("BesvartAvKundebehandlerBrukernavn");

                    b.Property<string>("Svar");

                    b.HasKey("ID");

                    b.HasIndex("BesvartAvKundebehandlerBrukernavn");

                    b.ToTable("Svar");
                });

            modelBuilder.Entity("DAL.DBModel.SporsmalOgSvar", b =>
                {
                    b.HasOne("DAL.DBModel.Kategori", "Kategori")
                        .WithMany("SporsmalOgSvar")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.DBModel.Kunde", "Kunde")
                        .WithMany("Sporsmal")
                        .HasForeignKey("KundeID");

                    b.HasOne("DAL.DBModel.SporsmalC", "Sporsmal")
                        .WithMany()
                        .HasForeignKey("SporsmalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.DBModel.SvarC", "Svar")
                        .WithMany()
                        .HasForeignKey("SvarID");
                });

            modelBuilder.Entity("DAL.DBModel.SvarC", b =>
                {
                    b.HasOne("DAL.DBModel.Kundebehandler", "BesvartAvKundebehandler")
                        .WithMany("Svar")
                        .HasForeignKey("BesvartAvKundebehandlerBrukernavn");
                });
#pragma warning restore 612, 618
        }
    }
}
